{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/ap/products/');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","response","message"],"sources":["/Users/karanveersinghsidhu/StudyD/React Practice/Ecomerce-Udemy/E-Commerce/frontend/src/actions/productActions.js"],"sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL } from '../constants/productConstants'\nimport axios from 'axios'\nexport const listProducts = () => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_LIST_REQUEST})\n\n        const {data} = await axios.get('/ap/products/')\n\n        dispatch({\n            type:PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    }\n    catch(error){\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n\n}"],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAQ,+BAA+B;AAC7G,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClD,IAAG;IACCA,QAAQ,CAAC;MAACC,IAAI,EAAEN;IAAoB,CAAC,CAAC;IAEtC,MAAM;MAACO;IAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,eAAe,CAAC;IAE/CH,QAAQ,CAAC;MACLC,IAAI,EAACL,oBAAoB;MACzBQ,OAAO,EAAEF;IACb,CAAC,CAAC;EACN,CAAC,CACD,OAAMG,KAAK,EAAC;IACRL,QAAQ,CAAC;MACLC,IAAI,EAAEJ,iBAAiB;MACvBO,OAAO,EAAEC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAAGF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAAGF,KAAK,CAACE;IACjG,CAAC,CAAC;EACN;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}