{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk'; // Correct the import here\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","userLogin","cartItemFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"sources":["/Users/karanveersinghsidhu/StudyD/React Practice/Ecomerce-Udemy/E-Commerce/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk'; // Correct the import here\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { productListReducers, productDetailsReducers } from './reducers/productReducers';\nimport { cartReducer} from './reducers/cartReducers'\nimport { userLoginReducer } from './reducers/userReducers'\n\nconst reducer = combineReducers({ productList: productListReducers, \n     productDetails: productDetailsReducers, cart:cartReducer, userLogin:userLoginReducer,});\n\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? \n     JSON.parse(localStorage.getItem('cartItems')) : []\nconst initialState = {\n     cart: {cartItems: cartItemFromStorage}\n};\nconst middleware = [thunk];\nconst store = createStore( reducer, initialState,\n     composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa,CAAC,CAAC;AACrC,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,mBAAmB,EAAEC,sBAAsB,QAAQ,4BAA4B;AACxF,SAASC,WAAW,QAAO,yBAAyB;AACpD,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,MAAMC,OAAO,GAAGR,eAAe,CAAC;EAAES,WAAW,EAAEL,mBAAmB;EAC7DM,cAAc,EAAEL,sBAAsB;EAAEM,IAAI,EAACL,WAAW;EAAEM,SAAS,EAACL;AAAiB,CAAC,CAAC;AAE5F,MAAMM,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AACvD,MAAMG,YAAY,GAAG;EAChBP,IAAI,EAAE;IAACQ,SAAS,EAAEN;EAAmB;AAC1C,CAAC;AACD,MAAMO,UAAU,GAAG,CAAClB,KAAK,CAAC;AAC1B,MAAMmB,KAAK,GAAGtB,WAAW,CAAES,OAAO,EAAEU,YAAY,EAC3Cf,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAU,CAAC,CACvD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}