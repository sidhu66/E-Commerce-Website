{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      // Check if the item already exists in the cart\n      const existItem = state.cartItems.find(x => x.product === item.product);\n      if (existItem) {\n        // If the item already exists, update the item (replace it with the new one)\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x => x.product === item.product ? item : x // Replace the old item with the new one\n          )\n        };\n      } else {\n        // If the item doesn't exist, add it to the cart\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"sources":["/Users/karanveersinghsidhu/StudyD/React Practice/Ecomerce-Udemy/E-Commerce/frontend/src/reducers/cartReducers.js"],"sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      // Check if the item already exists in the cart\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        // If the item already exists, update the item (replace it with the new one)\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === item.product ? item : x // Replace the old item with the new one\n          ),\n        };\n      } else {\n        // If the item doesn't exist, add it to the cart\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,gBAAgB,QAAQ,4BAA4B;AAE5E,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAG;EAAEC,SAAS,EAAE;AAAG,CAAC,EAAEC,MAAM,KAAK;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,aAAa;MAChB,MAAMO,IAAI,GAAGF,MAAM,CAACG,OAAO;MAC3B;MACA,MAAMC,SAAS,GAAGN,KAAK,CAACC,SAAS,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKL,IAAI,CAACK,OAAO,CAAC;MAEzE,IAAIH,SAAS,EAAE;QACb;QACA,OAAO;UACL,GAAGN,KAAK;UACRC,SAAS,EAAED,KAAK,CAACC,SAAS,CAACS,GAAG,CAAEF,CAAC,IAC/BA,CAAC,CAACC,OAAO,KAAKL,IAAI,CAACK,OAAO,GAAGL,IAAI,GAAGI,CAAC,CAAC;UACxC;QACF,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO;UACL,GAAGR,KAAK;UACRC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAS,EAAEG,IAAI;QACtC,CAAC;MACH;IAEF;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}